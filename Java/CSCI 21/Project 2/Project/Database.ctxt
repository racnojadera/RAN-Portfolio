#BlueJ class context
comment0.target=Database
comment1.params=
comment1.target=Database()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Database\r\n
comment10.params=
comment10.target=int\ numberOfDecks()
comment10.text=\r\n\ Determines\ how\ many\ decks\ are\ declared.\r\n\r\n\ @return\ The\ total\ number\ of\ decks.\r\n
comment11.params=
comment11.target=void\ shuffleDeck()
comment11.text=\r\n\ Shuffles\ the\ cards\ in\ a\ certain\ deck.\r\n\r\n\ @param\ iterator\ indicates\ the\ location\ of\ the\ deck.\r\n
comment12.params=i
comment12.target=void\ changeDifficulty(int)
comment12.text=\r\n\ Changes\ the\ difficulty\ of\ the\ study\ function.\r\n\r\n\ @param\ i\ indicates\ whether\ the\ difficulty\ is\ easy(1),\ normal(2),\ hard(3)\r\n
comment13.params=
comment13.target=int\ whatDifficulty()
comment13.text=\r\n\ Determines\ the\ difficulty.\r\n\r\n\ @return\ the\ difficulty(\ 1\ \=\ easy;\ 2\ \=\ normal;\ 3\ \=\ hard)\r\n
comment14.params=
comment14.target=void\ addDeckImports()
comment14.text=\r\n\ Adds\ a\ count\ whenever\ a\ new\ deck\ is\ imported/loaded\ from\ a\ .txt\ file\r\n
comment15.params=
comment15.target=void\ removeDeckImports()
comment15.text=\r\n\ resets\ the\ importCount\ to\ 0\ (used\ to\ declare\ new\ buttons\ and\ labels\ from\ imported/loaded\ .txt\ file)\r\n
comment16.params=
comment16.target=int\ wasImported()
comment16.text=\r\n\ Determines\ whether\ a\ deck\ was\ imported/loaded\ from\ a\ .txt\ file\r\n\r\n\ @return\ no\ imports(0)\ or\ it\ was\ imported(any\ positive\ number)\r\n
comment2.params=
comment2.target=int\ getIterator()
comment2.text=\r\n\ Returns\ the\ value\ of\ the\ iterator\ of\ the\ arraylist\ deckList.\r\n\r\n\ @return\ the\ value\ of\ the\ iterator.\r\n
comment3.params=i
comment3.target=void\ setIterator(int)
comment3.text=\r\n\ Sets\ the\ iterator\ to\ a\ certain\ value.\r\n\r\n\ @param\ i\ the\ certain\ value\ that\ will\ replace\ the\ current\ value\ of\ iterator.\r\n
comment4.params=name
comment4.target=void\ addDeck(java.lang.String)
comment4.text=\r\n\ Adds\ a\ deck\ to\ the\ deckList.\r\n\r\n\ @param\ name\ sets\ the\ name\ of\ the\ deck.\r\n
comment5.params=i
comment5.target=void\ removeDeck(int)
comment5.text=\r\n\ Removes\ a\ deck.\r\n\r\n\ @param\ i\ points\ out\ which\ deck\ is\ removed.\r\n
comment6.params=
comment6.target=java.lang.String\ getTitle()
comment6.text=\r\n\ Returns\ the\ title\ of\ a\ deck\ in\ the\ deckList.\r\n\r\n\ @param\ iterator\ indicates\ the\ location\ of\ the\ deck.\r\n\ @return\ the\ name\ of\ the\ deck.\r\n
comment7.params=
comment7.target=int\ getSize()
comment7.text=\r\n\ Returns\ the\ size/number\ of\ cards\ of\ a\ certain\ deck\ in\ the\ deckList.\r\n\r\n\ @param\ iterator\ indicates\ the\ location\ of\ the\ deck.\r\n\ @return\ the\ size/numer\ of\ cards.\r\n
comment8.params=
comment8.target=Deck\ getDeck()
comment8.text=\r\n\ Accesses\ a\ certain\ deck\ from\ the\ deckList.\r\n\ \r\n\ @param\ iterator\ indicates\ the\ location\ of\ the\ deck.\r\n\ @return\ the\ deck\r\n
comment9.params=
comment9.target=Deck\ cloneDeck()
comment9.text=\r\n\ Clones\ a\ deck\ and\ its\ contents\ given\ a\ location.\r\n\ \r\n\ @param\ iterator\ gives\ its\ location\r\n\ @param\ i\ iterates\ the\ original\ deck's\ card\ content\ and\ copies\ it\ to\ the\ replica\r\n\ @return\ A\ replica\ of\ the\ original\ deck.\r\n
numComments=17
